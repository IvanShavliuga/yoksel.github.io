{"componentChunkName":"component---src-templates-blog-post-js","path":"/svg-decoration","result":{"data":{"markdownRemark":{"html":"<p>Внешний вид SVG-элементам можно задавать как с помощью CSS, так и с помощью SVG-фильтров, градиентов и паттернов — их можно прописывать элементам прямо в коде либо задавать также через CSS.</p>\n<p>Стили и скрипты можно задавать внутри SVG-файла, но если мы хотим, чтобы одно и то же изображение в разных условиях выглядело по-разному — стили внутри файла не годятся — нужно, чтобы векторное содержимое было доступно для внешних стилей.<!--more--></p>\n<p>Из всех способов вставки SVG для этого подходят всего два: иконочный шрифт или инлайновый SVG в HTML (удобнее всего делать это через <code>use</code>).</p>\n<p>Какие стили оформления можно использовать для иконочных шрифтов?\nМожно задать цвет, добавить тени и анимацию:</p>\n<iframe height=\"250\"\n      style=\"width: 100%\"\n      title=\"no title\"\n      src=\"http://codepen.io/yoksel/embed/LnJEK/?&default-tab=result\"\n    ></iframe>\n<p>Не так уж и много, по сравнению с возможностями обычного SVG.</p>\n<p>Для SVG-изображений можно использовать SVG-градиенты и фильтры, например, размытие или тени. Также можно использовать в качестве обводки и заливки паттерны и изображения, а ещё можно красить отдельные части картинок и таким образом получать разноцветные иконки.</p>\n<p>При вставке SVG через <code>use</code> иконки становятся доступны для стилей страницы, и всеми этими прекрасными возможностями можно управлять через внешний CSS.</p>\n<p>Вот пример иконок с паттернами в качестве фона:</p>\n<iframe height=\"550\"\n      style=\"width: 100%\"\n      title=\"no title\"\n      src=\"http://codepen.io/yoksel/embed/mfdIE/?&default-tab=result\"\n    ></iframe>\n<p>Пример немного диковат, но он хорошо показывает, что фоном может быть любая картинка. Паттерны заданы в коде страницы и подключены с помощью CSS.</p>\n<p>Вот код деревянного паттерна:</p>\n<div class=\"gatsby-highlight\" data-language=\"markup\"><pre class=\"language-markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!-- Нужно задать размеры и Id, по которому будет вызываться паттерн --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pattern</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>wood<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>400<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>400<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">patternUnits</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>userSpaceOnUse<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- Внутрь вставляется картинка для фона --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span> <span class=\"token attr-name\"><span class=\"token namespace\">xlink:</span>href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>//img-fotki.yandex.ru/get/6447/5091629.86/0_74298_17a84446_L.jpg<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>400<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>400<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pattern</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>В паттерн можно класть всё что угодно: комбинации фигур, объекты с градиентами, текст... Правда, есть подозрение, что сложные фоны могут плохо влиять на производительность страницы, но тестов не делала.</p>\n<p>Подключаем паттерн:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.icons--wood</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">fill</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>#wood<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Чтобы при наведении менять местами обводку и заливку, нужно добавить ещё пару строчек:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.icons--wood</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">fill</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>#wood<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.icons--wood .icon:hover</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">fill</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">stroke</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>#wood<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Также можно делать интересные эффекты на основе обводки:</p>\n<iframe height=\"600\"\n      style=\"width: 100%\"\n      title=\"no title\"\n      src=\"http://codepen.io/yoksel/embed/cmslA/?&default-tab=result\"\n    ></iframe>\n<p>Обводки могут быть пунктирными, для них можно использовать градиент или паттерн.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* Обычная обводка, по наведению меняет цвет */</span>\n<span class=\"token selector\">.icons--stroke .icon</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">stroke</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> .5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">stroke-width</span><span class=\"token punctuation\">:</span> 2<span class=\"token selector\">;\n\n  &amp;:hover</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">stroke</span><span class=\"token punctuation\">:</span> skyblue<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* Пунктирная обводка, по наведению линия становится непрерывной */</span>\n<span class=\"token selector\">.icons--dasharray .icon</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">stroke</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> .5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">stroke-width</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">stroke-dasharray</span><span class=\"token punctuation\">:</span> 10 5<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">fill</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> .1<span class=\"token punctuation\">)</span><span class=\"token selector\">;\n\n  &amp;:hover</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">stroke-dasharray</span><span class=\"token punctuation\">:</span> 10 0<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* Обводка с градиентом */</span>\n<span class=\"token selector\">.icons--gradient .icon</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">stroke-width</span><span class=\"token punctuation\">:</span> 3<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">stroke</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>#stripes<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Иконкам в последней строке в качестве обводки задан градиент, уходящий в прозрачность, почему-то не работает в последней опере.</p>\n<p>С анимацией пуктирной обводки можно делать интересные штуки:</p>\n<iframe height=\"320\"\n      style=\"width: 100%\"\n      title=\"no title\"\n      src=\"http://codepen.io/yoksel/embed/blKmc/?&default-tab=result\"\n    ></iframe>\n<p><i>Нажмите Rerun если демо застыло.</i></p>\n<p>Не уверена, что эта анимация подходит для иконок (будет не очень хорошо, если иконки будут шевелиться или исчезать), но она может быть использована для эффектно появляющихся иллюстраций.</p>\n<p>Примерный код:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">path</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">fill</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/* В качестве обводки задан градиент */</span>\n  <span class=\"token property\">stroke</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>#stripes<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">stroke-width</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/* Исходное состояние обводки — длинные черточки с нулевыми пробелами */</span>\n  <span class=\"token property\">stroke-dasharray</span><span class=\"token punctuation\">:</span> 550 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> dasharray 5s infinite alternate<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> dasharray</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">100%</span> <span class=\"token punctuation\">{</span>\n  \t<span class=\"token comment\">/* Черточки нулевой длины с длинными пробелами, линиия исчезнет */</span>\n    <span class=\"token property\">stroke-dasharray</span><span class=\"token punctuation\">:</span> 0 500<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Следующий пример демонстрирует иконки с SVG-фильтрами:</p>\n<iframe height=\"550\"\n      style=\"width: 100%\"\n      title=\"no title\"\n      src=\"http://codepen.io/yoksel/embed/kszeJ/?&default-tab=result\"\n    ></iframe>\n<p>Размытие, тень, повторяющийся контур и внутренняя тень (её не очень хорошо видно).</p>\n<p>Конечно, размытие врядли подойдет для иконок, но с ним можно придумать разные другие интересные штуки.</p>\n<p>У фильтров есть недостаток: результатом наложения фильтров является растровое изображение, из-за чего картинки утрачивают способность тянуться без потерь в качестве и хуже выглядят на экранах с ретиной.</p>\n<p><b>UPD от 19 мая 2014:</b> фильтры хорошо выглядят на ретине, при условии, что они задаются SVG-элементам, а не HTML. Прошу прощения за неточность.</p>\n<p>В примере ниже SVG-изображение разделено на несколько путей, что дает возможность обращаться к ним поотдельности. Здесь это используется чтобы задать элементам разные цвета и задержки анимации. При этом в дальнейшем фигура (в данном случае это группа путей) может быть использована целиком — таким образом можно получить не только монохромные иконки, но и разноцветные. Правда, при вставке такого объекта через <code>use</code> в нем перестанет работать анимация, но раскраска сохранится.</p>\n<iframe height=\"400\"\n      style=\"width: 100%\"\n      title=\"no title\"\n      src=\"http://codepen.io/yoksel/embed/DixKv/?&default-tab=result\"\n    ></iframe>\n<p>В качестве заливки (или обводки) SVG-элементов удобно использовать <code>сurrentColor</code>. Это ключевое слово, обозначающее текущий цвет текста, и если задать его в качестве заливки (обводки) — элемент будет краситься вместе с окружающим текстом.</p>\n<p>Задаем заливку:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.icon</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">fill</span><span class=\"token punctuation\">:</span> currentColor<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Если потом для родительского элемента задать цвет текста</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">A</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> crimson<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p> фигура зальется этим же цветом. Очень удобно для ссылок по наведению и для страниц с несколькими темами оформления.</p>\n<p>Пример:</p>\n<iframe height=\"500\"\n      style=\"width: 100%\"\n      title=\"no title\"\n      src=\"http://codepen.io/yoksel/embed/xiLen/?&default-tab=result\"\n    ></iframe>\n<p>Интересно, что в SVG можно использовать далеко не все CSS-свойства, относительно полный список <a href=\"http://www.w3.org/TR/SVG11/styling.html#SVGStylingProperties\">можно найти вот тут</a>.\nМожно использовать <code>animation</code>, но <code>transition</code> работает странно и не во всех браузерах. CSS-градиенты использовать, к сожалению, нельзя. Трансформации работают.</p>\n<p>Также перед использованием различных фильтров и эффектов нужно всегда проверять как они поддерживаются разными браузерами.</p>\n<p>Из всего вышеизложенного можно сделать следующие выводы:</p>\n<ul>\n<li>самые широкие возможности для оформления дает инлайновый SVG;</li>\n<li>меньше возможностей, но более удобное подключение на страницу предоставляет иконочный шрифт. Существенный минус состоит в проблемах с поддержкой встраиваемых шрифтов в разных браузерах;</li>\n<li>если SVG-графика нужна только в одном стиле и нет необходимости управления через внешний CSS — лучше всего воспользоваться спрайтом.</li>\n</ul>","frontmatter":{"title":"Возможности оформления SVG","desc":"Внешний вид SVG-элементам можно задавать как с помощью CSS, так и с помощью SVG-фильтров, градиентов и паттернов — их можно прописывать элементам прямо в коде либо задавать также через CSS. Стили и скрипты можно задавать внутри SVG-файла, но если мы хотим, чтобы одно и то же изображение в разных условиях выглядело по-разному — стили внутри файла не годятся — нужно, чтобы векторное содержимое было доступно для внешних стилей","image":"//img-fotki.yandex.ru/get/9093/5091629.9d/0_814d9_aa20df1f_L.jpg","customCSS":null,"customJs":null,"tags":["svg"],"layout":null,"links":[{"desc":null,"name":"SVG icons FTW","url":"http://tympanus.net/codrops/2013/11/27/svg-icons-ftw/"},{"desc":null,"name":"SVG filters","url":"http://docs.webplatform.org/wiki/svg/tutorials/smarter_svg_filters"},{"desc":null,"name":"Filter Effects","url":"http://www.w3.org/TR/SVG11/filters.html"},{"desc":null,"name":"SVG: заливка и обводка","url":"/svg-fill-and-stroke"},{"desc":null,"name":"SVG-иконки","url":"/svg-icons"}]}}},"pageContext":{"slug":"svg-decoration","date":"17/04/2014","url":"/svg-decoration","type":"post","includeContent":"","isArchived":false,"previous":{"frontmatter":{"title":"CSS и SVG маски"},"fields":{"url":"/css-and-svg-masks","type":"post","isArchived":false}},"next":{"frontmatter":{"title":"Background-blend-mode"},"fields":{"url":"/background-blend-mode","type":"post","isArchived":false}}}}}