{"componentChunkName":"component---src-templates-blog-post-js","path":"/inline-styles-in-background","result":{"data":{"markdownRemark":{"html":"<p>Игралась с кодами, обнаружила удивительное: оказывается, внутри CSS-свойства <code>background</code> можно использовать другие CSS-свойства, например, <code>box-shadow</code>, <code>outline</code>, <code>transform</code> и даже ещё один <code>background</code>.<!--more--></p>\n<p>Очевидно, что мы не можем просто взять и засунуть одно CSS-свойство в другое: тени и трансформации должны применяться к элементу. В качестве фона мы можем использовать цвета, градиенты и картинки, но не только: ещё в качестве фона можно использовать SVG, причём не только в виде ссылки на внешний файл, — также код SVG-элемента можно вставить непосредственно в CSS, это делается вот такой конструкцией: <code>background-image: url(\"data:image/svg+xml,...\");</code>.</p>\n<p>SVG можно вставить в CSS прямо как есть, но такой код не будет работать в IE. Однако если его <a href=\"http://yoksel.github.io/url-encoder/ru\">заэскейпить</a>, код будет работать во всех браузерах включая IE9.</p>\n<iframe height=\"400\"\n      style=\"width: 100%\"\n      title=\"no title\"\n      src=\"http://codepen.io/yoksel/embed/ammZbr/?&default-tab=css,result\"\n    ></iframe>\n<p>И вот теперь если этому <code>svg</code> внутри <code>background</code> задать какие-нибудь стили в атрибуте <code>style</code>, они будут работать! Можно использовать обычные стили для HTML-элементов, то есть рамки (в том числе <code>border-image</code>), тени, фоны (включая CSS-градиенты) и даже трансформации!</p>\n<p>Например, можно взять такой код:</p>\n<div class=\"gatsby-highlight\" data-language=\"markup\"><pre class=\"language-markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>http://www.w3.org/2000/svg<span class=\"token punctuation\">'</span></span>\n  <span class=\"token attr-name\">viewBox</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>0 0 100 100<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>50<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>50<span class=\"token punctuation\">'</span></span><span class=\"token style-attr language-css\"><span class=\"token attr-name\">\n  <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">='</span><span class=\"token attr-value\"><span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>45deg<span class=\"token punctuation\">)</span> <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>.8<span class=\"token punctuation\">,</span>.8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token attr-value\">    <span class=\"token property\">transform-origin</span><span class=\"token punctuation\">:</span> 50% 50%<span class=\"token punctuation\">;</span></span>\n<span class=\"token attr-value\">    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span></span>\n<span class=\"token attr-value\">    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span>darkviolet<span class=\"token punctuation\">,</span> turquoise<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token attr-value\">    <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0 0 7px 3px white inset<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>circle</span> <span class=\"token attr-name\">r</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>30%<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">cx</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>50%<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">cy</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>50%<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">fill</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>gold<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>заэскейпить его и использовать как фон, при это все инлайновые стили сохранятся:</p>\n<iframe height=\"400\"\n      style=\"width: 100%\"\n      title=\"no title\"\n      src=\"http://codepen.io/yoksel/embed/BLQjoW/?&default-tab=css,result\"\n    ></iframe>\n<p>Жёлтый кружочек — это <code>circle</code> внутри <code>svg</code>, всё остальное — инлайновые стили: градиент, тень и трансформации.</p>\n<p>На самом деле, чтобы воспользоваться инлайновыйми стилями, нужен только элемент <code>svg</code>, его содержимое не играет роли и может отсутствовать:</p>\n<div class=\"gatsby-highlight\" data-language=\"markup\"><pre class=\"language-markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>http://www.w3.org/2000/svg<span class=\"token punctuation\">'</span></span>\n  <span class=\"token attr-name\">viewBox</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>0 0 100 100<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>50<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>50<span class=\"token punctuation\">'</span></span><span class=\"token style-attr language-css\"><span class=\"token attr-name\">\n  <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">='</span><span class=\"token attr-value\"><span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>45deg<span class=\"token punctuation\">)</span> <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>.8<span class=\"token punctuation\">,</span>.8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token attr-value\">    <span class=\"token property\">transform-origin</span><span class=\"token punctuation\">:</span> 50% 50%<span class=\"token punctuation\">;</span></span>\n<span class=\"token attr-value\">    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span></span>\n<span class=\"token attr-value\">    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span>darkviolet<span class=\"token punctuation\">,</span> turquoise<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token attr-value\">    <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0 0 7px 3px white inset<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">'</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token comment\">&lt;!-- тут ничего нет --></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>И всё равно всё будет работать:</p>\n<iframe height=\"400\"\n      style=\"width: 100%\"\n      title=\"no title\"\n      src=\"http://codepen.io/yoksel/embed/WGoKAv/?&default-tab=css,result\"\n    ></iframe>\n<h2>Кроссбраузерность</h2>\n<p>Интересно, что такие стили работают во всех современных браузерах, но у каждого свои представления о том, как это должно выглядеть в итоге:</p>\n<figure class=\"figure figure--text-on-right\">\n<img src=\"../assets/img/articles/inline-styles-in-bg/chrome.png\" alt=\"Chrome\">\n<figcaption>\n  <h3>Chrome</h3>\n  <p>Тени, трансформации и градиенты работают, градиент поворачивается вместе с фигурой. Пустые места в углах плитки фона заполняются градиентом.</p>\n  <p><code>transform-origin</code> по умолчанию находится в точке <code>0, 0</code>.</p>\n</figcaption>\n</figure>\n<figure class=\"figure figure--text-on-right\">\n<img src=\"../assets/img/articles/inline-styles-in-bg/ff.png\" alt=\"Firefox\">\n<figcaption>\n    <h3>Firefox</h3>\n    <p>Тени, трансформации и градиенты работают, но тень поворачивается вместе с фигурой, а градиент — нет.</p>\n    <p><code>transform-origin</code> по умолчанию находится в точке <code>0, 0</code>.</p>\n</figcaption>\n</figure>\n<figure class=\"figure figure--text-on-right\">\n<img src=\"../assets/img/articles/inline-styles-in-bg/safari.png\" alt=\"Safari\">\n<figcaption>\n    <h3>Safari</h3>\n    <p>Тени, трансформации и градиенты работают, градиент поворачивается вместе с фигурой. Пустые места в углах плитки фона ничем не заполняются.</p>\n    <p><code>transform-origin</code> по умолчанию находится в точке <code>0, 0</code>.</p>\n</figcaption>\n</figure>\n<figure class=\"figure figure--text-on-right\">\n<img src=\"../assets/img/articles/inline-styles-in-bg/ie.png\" alt=\"IE11\">\n<figcaption>\n<h3>IE11</h3>\n<p>Трансформации и градиенты работают, тени — нет. Градиент поворачивается вместе с фигурой. Пустые места в углах плитки фона не заполняются.</p>\n<p><code>transform-origin</code> по умолчанию находится в точке <code>50%, 50%</code>.</p>\n<p>В отличие от остальных браузеров, здесь не работает <code>transform-origin</code>, заданный в процентах, — при этом ломается весь фон. Также, если фигуре задать <code>border</code>, отобразится только он, а градиенты и тени пропадут.</p>\n</figcaption>\n</figure>\n<p>С одной стороны, инлайновые стили в фоне везде отображаются по-разному, с другой — это настолько странная конструкция, что непонятно почему она вообще работает.</p>\n<p>Стили в фонах открывают широчайшие возможности для экспериментов и заодно позволяют помечтать о разных возможностях, которых сейчас в фонах нет, но очень хочется, чтобы были.</p>\n<p>Например, если делать паттерны с помощью градиентов, иногда хочется просто взять и повернуть плитку фона, например, на 45 градусов, чтобы получилась чешуя:</p>\n<figure><iframe height=\"350\"\n      style=\"width: 100%\"\n      title=\"no title\"\n      src=\"http://codepen.io/yoksel/embed/gwrKzJ/?&default-tab=result\"\n    ></iframe>\n<figcaption>(Нормально отображается только в Chrome и Opera)</figcaption>\n</figure>\n<p>Ещё один вариант чешуи:</p>\n<figure><iframe height=\"350\"\n      style=\"width: 100%\"\n      title=\"no title\"\n      src=\"http://codepen.io/yoksel/embed/amkjXg/?&default-tab=result\"\n    ></iframe>\n<figcaption>(Chrome, Opera)</figcaption>\n</figure>\n<p>Или вот хочется сделать сложный фон из нескольких градиентов и повернуть всю группу сразу (в данном случае такой группой является полупрозрачный трёхцветный градиент):</p>\n<figure><iframe height=\"420\"\n      style=\"width: 100%\"\n      title=\"no title\"\n      src=\"http://codepen.io/yoksel/embed/RGRRvo/?&default-tab=result\"\n    ></iframe>\n<figcaption>(Chrome, Opera)</figcaption>\n</figure>\n<p>Или, например, хочется изменить размер фона, но так, чтобы какие-то линии сохранили свой размер. <code>box-shadow</code> при ресайзе <code>background-size</code> именно так и работает:</p>\n<figure><iframe height=\"400\"\n      style=\"width: 100%\"\n      title=\"no title\"\n      src=\"http://codepen.io/yoksel/embed/ORNqdx/?&default-tab=result\"\n    ></iframe>\n<figcaption>(Chrome, Opera, Firefox, Safari)</figcaption>\n</figure>\n<p>Ресайзится только плитка фона, размер теней не меняется. Из этого можно сделать, например, калейдоскопический паттерн:</p>\n<figure><iframe height=\"430\"\n      style=\"width: 100%\"\n      title=\"no title\"\n      src=\"http://codepen.io/yoksel/embed/QKNPjJ/?&default-tab=result\"\n    ></iframe>\n<figcaption>(Chrome, Opera, Firefox, Safari)</figcaption>\n</figure>\n<p>Используя <code>border-image</code> c градиентами можно делать совсем уж замысловатые штуки:</p>\n<figure><iframe height=\"350\"\n      style=\"width: 100%\"\n      title=\"no title\"\n      src=\"http://codepen.io/yoksel/embed/amkLvw/?&default-tab=result\"\n    ></iframe>\n<figcaption>(Chrome, Opera, Firefox, Safari)</figcaption>\n</figure>\n<p>Играться можно до бесконечности.</p>\n<p>Я не знаю как это знание можно пристроить к делу, но меня так поразила эта находка, что я решила о ней рассказать. И я до сих пор под впечатлением от того, что в <code>background-image</code> можно использовать трансформации и <code>border-image</code>, хотя практической пользы в этом, наверное, никакой.</p>\n<p>Если у вас есть идеи куда это можно применить, поделитесь.</p>\n<p>Все мои эксперименты с инлайновыми стилями можно увидеть <a href=\"http://codepen.io/collection/DyJRrY/\">в этой коллекции</a> (смотреть лучше в Хроме и Опере).</p>","frontmatter":{"title":"Инлайновые стили в background-image","desc":"Игралась с кодами, обнаружила удивительное: оказывается, внутри CSS-свойства background можно использовать другие CSS-свойства, например, box-shadow, outline, transform и даже ещё один background!","image":"https://img-fotki.yandex.ru/get/41743/5091629.a4/0_90dda_849784af_orig","customCSS":null,"customJs":null,"tags":["svg","gradients","box-shadow","experiments","transform"],"layout":null,"links":[{"desc":null,"name":"Data URI + SVG","url":"https://r.va.gg/2012/05/data-uri-svg.html"},{"desc":null,"name":"Optimizing SVGs in data URIs","url":"https://codepen.io/tigt/post/optimizing-svgs-in-data-uris"},{"desc":null,"name":"URL-encoder для SVG","url":"http://yoksel.github.io/url-encoder/ru"},{"desc":null,"name":"Background tricks with SVG, Box shadows and CSS Gradients","url":"http://codepen.io/collection/DyJRrY/2/"}]}}},"pageContext":{"slug":"inline-styles-in-background","date":"21/09/2016","url":"/inline-styles-in-background","type":"post","includeContent":"","isArchived":true,"previous":{"frontmatter":{"title":"SVG плюс Angular минус Firefox"},"fields":{"url":"/svg-angular-firefox","type":"post","isArchived":true}},"next":null}}}