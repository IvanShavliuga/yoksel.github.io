{"componentChunkName":"component---src-templates-blog-post-js","path":"/svg-angular-firefox","result":{"data":{"markdownRemark":{"html":"<p>SVG удивительная технология, не в последнюю очередь благодаря своим оригинальным подводным камням. Если вы начали работать с SVG — скучно точно не будет.</p>\n<p>Парочка свежих проблем была обнаружена при взаимодействии SVG с Angular, причем они возникали только в Firefox. Я решила описать проблемы и их решения здесь: себе на память, другим на пользу.<!--more--></p>\n<h2>Проблема № 1.</h2>\n<p>Дано: SVG-иконки, подключаемые через <code>use</code> в нужные места страницы. Конструкция работает как часы во всех современных браузерах, но тут приходит Angular и меняет <a href=\"http://www.w3.org/TR/html-markup/base.html\"><code>base</code></a>. Во всех браузерах всё работает, кроме Firefox: в нем иконки исчезают, но только в случае, если ссылка в <code>base</code> не совпадает с адресом текущей страницы.</p>\n<p>Про это даже есть <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=652991\">баг</a> от 2011 года, но проблема до сих пор существует.</p>\n<p>Демо (смотреть в Firefox):</p>\n<iframe class=\"frame--border\" src=\"../assets/demo/svg-in-firefox/svg-no-base.html\" style=\"width: 100%; height: 370px\">\n</iframe>\n<a href=\"../assets/demo/svg-in-firefox/svg-no-base.html\">Ссылка на демо</a>\n<p><i>Оба кружка находятся внутри одного SVG, по нажатию на кнопку он полностью копируется. Голубой кружок слева — просто фигура, чтобы видеть, что в SVG вообще что-то есть. Красный кружок справа — символ, вставленный через <code>use</code>. Символ объявлен выше внутри того же SVG.</i></p>\n<p>Решение: если добавить тегу SVG атрибут <code>xml:base</code> и в нем задать URL текущей страницы, иконки начинают работать вне зависимости от ссылки в <code>base</code>.</p>\n<p>Проверьте в Firefox:</p>\n<iframe class=\"frame--border\" src=\"../assets/demo/svg-in-firefox/svg-has-base.html\" style=\"width: 100%; height: 370px\"></iframe>\n<p><a href=\"../assets/demo/svg-in-firefox/svg-has-base.html\">Ссылка на демо</a></p>\n<h2>Проблема № 2.</h2>\n<p>Иконки, отрисовываемые внутри <code>ng-repeat</code>, могут не отображаться на странице. Код корректный, он есть на странице, но в <code>use</code> ничего нет, хотя тот же код, вынесенный из <code>ng-repeat</code>, прекрасно работает.</p>\n<p>Решение:</p>\n<ol>\n<li>Взять содержимое атрибута <code>xlink:href</code> элемента <code>use</code>.</li>\n<li>Очистить <code>xlink:href</code>.</li>\n<li>Вставить в <code>xlink:href</code> старое значение.</li>\n</ol>\n<p>После этого иконки начинают отображаться.</p>\n<p>Способ странный, но он работает.</p>\n<p>По правде сказать, оба решения выглядят не очень изящно, и всем было бы гораздо проще, если бы SVG в Firefox просто вел себя как в других браузерах, но вот нет.</p>\n<p>Если вы знаете более красивые способы решить эти проблемы, расскажите мне о них, пожалуйста.</p>","frontmatter":{"title":"SVG плюс Angular минус Firefox","desc":"SVG удивительная технология, не в последнюю очередь благодаря своим оригинальным подводным камням. Парочка свежих проблем была обнаружена при взаимодействии SVG с Angular, причем они возникали только в Firefox.","image":"https://img-fotki.yandex.ru/get/15538/5091629.a3/0_86805_56cc8e5e_orig","customCSS":null,"customJs":null,"tags":["svg","firefox"],"layout":null,"links":null}}},"pageContext":{"slug":"svg-angular-firefox","date":"22/11/2014","url":"/svg-angular-firefox","type":"post","includeContent":"","isArchived":true,"previous":{"frontmatter":{"title":"Обновление плагина svg_fallback"},"fields":{"url":"/svg-fallback-update","type":"post","isArchived":true}},"next":{"frontmatter":{"title":"Инлайновые стили в background-image"},"fields":{"url":"/inline-styles-in-background","type":"post","isArchived":true}}}}}