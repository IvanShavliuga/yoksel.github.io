{"componentChunkName":"component---src-templates-blog-post-js","path":"/grunt-plugin","result":{"data":{"markdownRemark":{"html":"<p>В один прекрасный день перед нами (мной и моими коллегами) встала задача обработать большое количество SVG-иконок.\nИсходные данные: три десятка бесцветных SVG-изображений (их цвета задаются потом через CSS) и задача сделать из них PNG+CSS фолбек для старых браузеров.<!--more--></p>\n<p>Примерные шаги:</p>\n<ol>\n<li>Покрасить каждую иконку в нужный цвет.</li>\n<li>Для некоторых иконок сделать вариации другого цвета и размера.</li>\n<li>Собрать в PNG-спрайт.</li>\n<li>Написать CSS.</li>\n</ol>\n<p>При этом получается две версии картинок: прозрачные исходники и те, что в спрайте. Обе версии всегда должны синхронизироваться между собой, а в идеале — иметь общий CSS c общими размерами и заливками для SVG.</p>\n<p>Очевидно, что делать сборку руками долго, и процесс нужно автоматизировать, особенно если иметь в виду необходимость синхронизации изменений.</p>\n<p>Если опустить второй шаг, первоначальную версию можно собрать из существующих плагинов для гранта. Правда, получается нечто странное, но конструкция работает.</p>\n<p>Первая сборка выглядела примерно так:</p>\n<ol>\n<li><a href=\"https://www.npmjs.org/package/grunt-grunticon\">grunt-grunticon</a> — красит и создает PNG-версии.</li>\n<li><a href=\"https://www.npmjs.org/package/grunt-spritesmith\">grunt-spritesmith</a> — генерит спрайт и CSS.</li>\n</ol>\n<p>Это позволило быстро получить некий промежуточный результат, но меня не устроил CSS, получаемый на выходе. Например, он не содержал цвета заливки для SVG, и их потребовалось бы задавать где-то отдельно. Кроме того, чтобы получить в спрайте вариации иконок другого цвета и размера, пришлось бы дублировать SVG-исходники, а чтобы <b>grunticon</b> покрасил SVG-файлы в нужные цвета, их все нужно переназвать специальным образом (а перед генерацией спрайта переназвать обратно, ага).</p>\n<p>Таким образом я пришла к необходимости сделать свой плагин для гранта, главными задачами которого были бы покраска изображений и создание вариаций нескольких цветов и размеров. Ну и генерация библиотеки SVG-символов + спрайт + CSS, чтобы два раза не вставать.</p>\n<p>Мой плагин: <b><a href=\"https://www.npmjs.org/package/svg_fallback\">svg_fallback</a></b>.</p>\n<p><i>(Да, я знаю что лучше использовать дефис, а ещё в названии не хватает префикса grunt, но это мой первый плагин : )</i></p>\n<p>Что он делает:</p>\n<ol>\n<li>Берет папку SVG-изображений и делает из неё библиотеку символов.</li>\n<li>Берет ещё раз ту же папку, собирает из картинок спрайт и генерит CSS с заливками, размерами и фоновой картинкой для старых браузеров.</li>\n</ol>\n<p>Название папки используется как префикс в классах и названиях файлов. Это нужно, чтобы не возникало конфликтов между разными наборами иконок, если они встретились на одной странице.</p>\n<p>По окончании работы открывается демо-страница с результатами работы плагина (можно проверить работу и SVG, и PNG).</p>\n<p>Выше описан самый простой сценарий, при котором исходные файлы никак не модифицируются в процессе, но самое интересное начинается, если в папку с исходниками положить файл <b>config.json</b>, в котором описаны желаемые изменения.</p>\n<p>Например, можно задать цвет, который получат все иконки по умолчанию:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"orangered\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Сейчас плагин умеет красить только прозрачные иконки.</p>\n<p>Другая задача: исходные SVG имеют не тот размер, который планируется использовать. Нужные размеры можно задать таким образом:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"default-sizes\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"heart\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"width\"</span><span class=\"token operator\">:</span> <span class=\"token number\">182</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"home\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"height\"</span><span class=\"token operator\">:</span> <span class=\"token number\">42</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Сами SVG на странице могут быть любого размера, но для генерации PNG+CSS нужно привести исходники к конкретным размерам, которыми потом планируется пользоваться.</p>\n<p>А вот так можно сделать несколько вариаций одного файла:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"icons\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"heart\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"width\"</span><span class=\"token operator\">:</span> <span class=\"token number\">50</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"green\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"width\"</span><span class=\"token operator\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"steelblue\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"home\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"width\"</span><span class=\"token operator\">:</span> <span class=\"token number\">150</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"width\"</span><span class=\"token operator\">:</span> <span class=\"token number\">170</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"teal\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"height\"</span><span class=\"token operator\">:</span> <span class=\"token number\">62</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"yellowgreen\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>В этом случае на выходе будет, например, исходный файл <b>heart.svg</b> и его вариации:</p>\n<pre><b>heart--w50.svg\nheart--green.svg\nheart--w150--steelblue.svg</b></pre>\n<p>Можно задавать конфигурацию по частям, а можно написать всё сразу:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"orangered\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"default-sizes\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// размеры по умолчанию</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"icons\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// вариации иконок</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Результатом работы плагина будут три файла, названные по имени родительской папки. Например, содержимое папки <b>myicons/</b> превратится в:</p>\n<ul>\n<li><b>myicons.svg</b> — библиотека символов</li>\n<li><b>myicons.png</b> — спрайт</li>\n<li><b>myicons.css</b> — CSS с размерами иконок и заливкой для SVG.</li>\n</ul>\n<p>Для использования получившихся иконок на странице нужно:</p>\n<ol>\n<li>Подключить на страницу <b>myicons.css</b>.</li>\n<li>В начале документа (после открывающего <code>&#x3C;body></code>) разместить библиотеку иконок (содержимое файла <b>myicons.svg</b>).</li>\n<li>Отдельные иконки на страницу вставляются вот таким образом:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"markup\"><pre class=\"language-markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2000/svg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>myicons myicons--heart<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>use</span> <span class=\"token attr-name\"><span class=\"token namespace\">xlink:</span>href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>#myicons--heart<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>use</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><b>Upd:</b> если в SVG опустить закрывающие теги (написать <code>&#x3C;use/></code>, a не <code>&#x3C;use>...&#x3C;/use></code>), в старых браузерах перестаёт работать HTML5-разметка.\nВсем SVG-тегам на странице обязательно нужен закрывающий парный тег.\nЗа уточнение спасибо <a href=\"https://twitter.com/mista_k\">mista_k</a>.</p>\n<p>Отображение иконки в старых браузерах обеспечивается вот таким кодом:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.ie8 .myicons</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>noconfig.png<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Подразумевается, что на странице есть класс <code>.ie8</code>, по которому можно определить нужную версию IE.</p>\n<p>Чтобы лучше понять как всё работает, можете установить пакет и заглянуть в папку <b>svg_fallback/test/</b>.</p>\n<p>В процессе написания этого плагина было принято решение вынести код, отвечающий за изменение файлов, в отдельный пакет: <a href=\"https://www.npmjs.org/package/svg-modify\">svg-modify</a>, который, при желании, можно использовать в виде плагина для гранта: <a href=\"https://www.npmjs.org/package/grunt-svg-modify\">grunt-svg-modify</a>.</p>\n<p>Теперь у меня есть целых два плагина : ) Правда, они решают довольно специфические задачи и врядли найдут широкое применение, но если вам нужно нужно проделать с SVG-иконками что-то подобное, они могут сэкономить вам время.</p>\n<p>Если вы захотите их использовать, следует иметь в виду, что <a href=\"https://www.npmjs.org/package/svg-modify\">svg-modify</a>, скорее всего, ещё будет дорабатываться (хочется более разумной работы с цветами), да и вообще я всё ещё изредка нахожу в плагинах баги разного размера, так что их стабильную работу обещать пока не могу (хотя и постараюсь).</p>\n<p>Кроме того, <a href=\"https://www.npmjs.org/package/svg_fallback\">svg_fallback</a> писался для конкретной задачи, и, возможно, для ваших целей вам захочется изменить именование файлов или формат вывода CSS. В плагине нет таких опций, но вы можете форкнуть его и переписать на свой вкус.</p>\n<p>Также следует уточнить, что мои познания в Js оставляют желать лучшего, и мой код может показаться вам странным. Кстати, буду признательна за советы как его улучшить.</p>\n<p><b>Upd:</b> за помощь и ценные советы спасибо <a href=\"https://twitter.com/mista_k\">mista_k</a> и <a href=\"https://twitter.com/alexeyten\">alexeyten</a>.</p>","frontmatter":{"title":"Зачем я написала плагин для Grunt","desc":"Исходные данные: три десятка бесцветных SVG-изображений (их цвета задаются потом через CSS) и задача сделать из них PNG+CSS фолбек для старых браузеров.","image":"//img-fotki.yandex.ru/get/6820/5091629.a1/0_84c51_1bb64b9_orig","customCSS":null,"customJs":null,"tags":["svg","js"],"layout":null,"links":[{"desc":null,"name":"svg_fallback","url":"https://www.npmjs.org/package/svg_fallback"},{"desc":null,"name":"npmjs.org/~yoksel","url":"https://www.npmjs.org/~yoksel"},{"desc":null,"name":"gruntjs.com","url":"http://gruntjs.com/"},{"desc":null,"name":"Грабли на чистом SVG","url":"/svg-in-ie8"}]}}},"pageContext":{"slug":"grunt-plugin","date":"25/08/2014","url":"/grunt-plugin","type":"post","includeContent":"","isArchived":true,"previous":{"frontmatter":{"title":"You Don't Know SVG"},"fields":{"url":"/you-dont-know-svg","type":"post","isArchived":true}},"next":{"frontmatter":{"title":"Грабли на чистом SVG"},"fields":{"url":"/svg-in-ie8","type":"post","isArchived":true}}}}}