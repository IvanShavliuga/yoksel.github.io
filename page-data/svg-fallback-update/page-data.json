{"componentChunkName":"component---src-templates-blog-post-js","path":"/svg-fallback-update","result":{"data":{"markdownRemark":{"html":"<p>В прошлом <a href=\"/svg-fallback-in-ie9-and-androids2x/\">посте</a> всем было немного непонятно: почему бы не определять браузер существующими способами и зачем отказываться от JS-библиотек? Вопросы вполне закономерные, но у меня была причина искать способ сделать SVG-фолбек без внешних зависимостей: нужно было решение для grunt-плагина.<!--more--></p>\n<p>Исходные данные: мой плагин для Grunt, который берет SVG-иконки и делает из них фолбек для IE8. То есть он генерит PNG и CSS-файлы, которые можно использовать в любых браузерах, но в CSS жестко зашит только класс <code>.ie8</code>. Это было быстрое решение, которое затем предполагалось сделать более универсальным.</p>\n<p>Новое решение должно было быть не только универсальным, но и простым. То есть пользователь берет библиотеку иконок, генерит файлы, подключает их в свой проект и всё просто работает. Любые внешние зависимости означали бы, что пользователю надо было бы помнить и о них тоже, а также позаботиться о том, чтобы классы совпадали с теми, что используются в CSS-коде фолбека. По-моему, так себе конструкция, и именно поэтому мне захотелось найти решение на CSS.</p>\n<p><a href=\"/svg-fallback-in-ie9-and-androids2x\">Решение найдено</a>, и я уже включила его код в плагин <a href=\"https://www.npmjs.org/package/svg_fallback\">svg_fallback</a>. Я не уверена, что это лучшее решение из возможных, но оно универсальное, и оно просто работает.</p>\n<p>Вобщем, если вы используете <a href=\"https://www.npmjs.org/package/svg_fallback\">svg_fallback</a>, обновляйте плагин, пробуйте, делитесь впечатлениями. Также если вам известны для этой задачи какие-то решения получше, буду рада о них узнать.</p>","frontmatter":{"title":"Обновление плагина svg_fallback","desc":"В прошлом посте всем было немного непонятно: почему бы не определять браузер существующими способами и зачем отказываться от JS-библиотек? У меня была причина искать способ сделать SVG-фолбек без внешних зависимостей: нужно было решение для плагина.","image":"https://img-fotki.yandex.ru/get/15589/5091629.a3/0_86697_b717911b_orig","customCSS":null,"customJs":null,"tags":["svg"],"layout":null,"links":[{"desc":null,"name":"Грабли на чистом SVG","url":"/svg-in-ie8"},{"desc":null,"name":"svg_fallback (Grunt plugin)","url":"https://www.npmjs.org/package/svg_fallback"},{"desc":null,"name":"Зачем я написала плагин для Grunt","url":"/grunt-plugin"}]}}},"pageContext":{"slug":"svg-fallback-update","date":"16/11/2014","url":"/svg-fallback-update","type":"post","includeContent":"","isArchived":true,"previous":{"frontmatter":{"title":"Трюк на CSS для поддержки SVG в старых браузерах"},"fields":{"url":"/svg-fallback-in-ie9-and-androids2x","type":"post","isArchived":true}},"next":{"frontmatter":{"title":"SVG плюс Angular минус Firefox"},"fields":{"url":"/svg-angular-firefox","type":"post","isArchived":true}}}}}