{"componentChunkName":"component---src-templates-blog-post-js","path":"/flexbox","result":{"data":{"markdownRemark":{"html":"<p><strong>Flexbox</strong> — это новый способ располагать блоки на странице. Это технология, созданная именно для раскладки элементов, в отличие от float-ов. С помощью <strong>Flexbox</strong> можно легко выравнивать элементы по горизонтали и по вертикали, менять направление и порядок отображение элементов, растягивать блоки на всю высоту родителя или прибивать их к нижнему краю.<!--more--></p>\n<p><b>UPD от 02.02.2017:</b> сделала удобную шпаргалку по флексбоксам, с живыми демками и описаниями из спеки: <a href=\"http://yoksel.github.io/flex-cheatsheet/\">Flexbox cheatsheet</a>.</p>\n<p>В примерах используется только новый синтаксис. На момент написания статьи правильней всего они отображаются в <strong>Chrome</strong>. В Firefox работают частично, в Safari — вообще не работают.</p>\n<p>Спецификация на английском есть тут: <a href=\"http://www.w3.org/TR/css3-flexbox/\" title=\"w3.org/TR/css3-flexbox\">w3.org/TR/css3-flexbox</a>.</p>\n<p>Согласно сайту <a href=\"http://caniuse.com/#search=flexbox\">caniuse.com</a>, <strong>Flexbox</strong> не поддерживается 8 и 9-м IE и Opera Mini, а в других браузерах поддерживаются не все свойства и/или требуются префиксы.</p>\n<p>Это означает, что технологию нельзя широко использовать прямо сейчас, но уже самое время познакомиться с ней поближе.</p>\n<p>Для начала надо знать, что flex-элементы располагаются по осям. По умолчанию элементы располагаются по горизонтали — вдоль <strong>main axis</strong> — главной оси.</p>\n<img src=\"http://img-fotki.yandex.ru/get/6717/5091629.97/0_7a3b2_58e721f4_orig\" title=\"Оси\" alt=\"Оси\"/>\n<p>Так же следует иметь в виду, что при использовании <strong>Flexbox</strong> для внутренних блоков не работают <code>float</code>, <code>clear</code> и <code>vertical-align</code>, а так же свойства, задающие колонки в тексте.</p>\n<p>Приготовим полигон для экспериментов:</p>\n<iframe class=\"live-snippet\" style=\"height: 350px\" src=\"../assets/demo/flexbox/demo_1.html?output\"></iframe>\n<p>Один родительский блок (желтый) и 5 дочерних.</p>\n<section id=\"display-flex\" data-name=\"display-flex\"><h4>Display: flex</h4>\n<p>И теперь родительскому элементу добавляем <code>display: flex;</code>.\nВнутренние div-ы выстраиваются в ряд (вдоль главной оси) колонками одинаковой высоты, независимо от содержимого.</p>\n<iframe class=\"live-snippet\" style=\"height: 220px\" src=\"../assets/demo/flexbox/demo_2.html?output\"></iframe>\n<p><code>display: flex;</code> делает все дочерние элементы резиновыми — <code>flex</code>, а не инлайновыми или блочными, как было изначально.</p>\n<p>Если родительский блок содержит картинки или текст без оберток, они становятся анонимными flex-элементами.</p>\n<iframe class=\"live-snippet\" style=\"height: 270px\" src=\"../assets/demo/flexbox/demo_3.html?output\"></iframe>\n<p>Свойство <code>display</code> для <strong>Flexbox</strong> может принимать два значения:</p>\n<p><code>flex</code> — ведёт себя как блочный элемент. При рассчете ширины блоков приоритет у раскладки (при недостаточной ширине блоков контент может вылезать за границы).</p>\n<iframe class=\"live-snippet\" style=\"height: 200px\" src=\"../assets/demo/flexbox/demo_4.html?output\"></iframe>\n<p><code>inline-flex</code> — ведёт себя как инлайн-блочный. Приоритет у содержимого (контент растопыривает блоки до необходимой ширины, чтобы строчки, по возможности, поместились).</p>\n<iframe class=\"live-snippet\" style=\"height: 200px\" src=\"../assets/demo/flexbox/demo_5.html?output\"></iframe>\n</section><section id=\"flex-direction\" data-name=\"flex-direction\"><h4>Flex-direction</h4>\n<p>Направление раскладки блоков управляется свойством <code>flex-direction</code>.</p>\n<p>Возможные значения:</p>\n<p><code>row</code> — строка (значение по умолчанию);\n<code>row-reverse</code> — строка с элементами в обратном порядке;\n<code>column</code> — колонка;\n<code>column-reverse</code> — колонка с элементами в обратном порядке.</p>\n<p><code>row</code> и <code>row-reverse</code></p>\n<iframe class=\"live-snippet\" style=\"height: 400px\" src=\"../assets/demo/flexbox/demo_6.html?output\"></iframe>\n<p><code>column</code> и <code>column-reverse</code></p>\n<iframe class=\"live-snippet\" style=\"height: 380px\" src=\"../assets/demo/flexbox/demo_7.html?output\"></iframe>\n</section><section id=\"flex-wrap\" data-name=\"flex-wrap\"><h4>Flex-wrap</h4>\nВ одной строке может быть много блоков. Переносятся они или нет определяет свойство <code>flex-wrap</code>.\n<p>Возможные значения:</p>\n<p><code>nowrap</code> — блоки не переносятся (значение по умолчанию);\n<code>wrap</code> — блоки переносятся;\n<code>wrap-reverse</code> — блоки переносятся и располагаются в обратном порядке.</p>\n<iframe class=\"live-snippet\" style=\"height: 630px\" src=\"../assets/demo/flexbox/demo_8.html?output\"></iframe>\n<p>Для короткой записи свойств <code>flex-direction</code> и <code>flex-wrap</code> существует свойство: <code>flex-flow</code>.</p>\n<p>Возможные значения: можно задавать оба свойства или только какое-то одно. Например:</p>\n<p><code>flex-flow: column;</code>\n<code>flex-flow: wrap-reverse;</code>\n<code>flex-flow: column-reverse wrap;</code></p>\n<p>Демо для <code>row-reverse wrap-reverse</code>:</p>\n<iframe class=\"live-snippet\" style=\"height: 300px\" src=\"../assets/demo/flexbox/demo_9.html?output\"></iframe>\n</section><section id=\"order\" data-name=\"order\"><h4>Order</h4>\nДля управления порядком блоков служит свойство <code>order</code>.\n<p>Возможные значения: числа.\nЧтобы поставить блок самым первым, задайте ему <code>order: -1</code>:</p>\n<iframe class=\"live-snippet\" style=\"height: 250px\" src=\"../assets/demo/flexbox/demo_10.html?output\"></iframe>\n</section><section id=\"justify-content\" data-name=\"justify-content\"><h4>Justify-content</h4>\nДля выравнивания элементов есть несколько свойств: <code>justify-content</code>, <code>align-items</code> и <code>align-self</code>.\n<p><code>justify-content</code> и <code>align-items</code> применяются к родительскому контейнеру, <code>align-self</code> — к дочерним.</p>\n<p><code>justify-content</code> отвечает за выравнивание по главной оси.</p>\n<p>Возможные значения <code>justify-content</code>:</p>\n<p><code>flex-start</code> — элементы выравниваются от начала главной оси (значение по умолчанию);\n<code>flex-end</code> — элементы выравниваются от конца главной оси;\n<code>center</code> — элементы выравниваются по центру главной оси;\n<code>space-between</code> — элементы выравниваются по главной оси, распределяя свободное место между собой;\n<code>space-around</code> — элементы выравниваются по главной оси, распределяя свободное место вокруг себя.</p>\n<p><code>flex-start</code> и <code>flex-end</code></p>\n<iframe class=\"live-snippet\" style=\"height: 450px\" src=\"../assets/demo/flexbox/demo_11.html?output\"></iframe>\n<p><code>center</code></p>\n<iframe class=\"live-snippet\" style=\"height: 270px\" src=\"../assets/demo/flexbox/demo_12.html?output\"></iframe>\n<p><code>space-between</code>, <code>space-around</code></p>\n<iframe class=\"live-snippet\" style=\"height: 450px\" src=\"../assets/demo/flexbox/demo_13.html?output\"></iframe>\n</section><section id=\"align-items\" data-name=\"align-items\"><h4>Align-items</h4>\n<code>align-items</code> отвечает за выравнивание по перпендикулярной оси.\n<p>Возможные значения <code>align-items</code>:</p>\n<p><code>flex-start</code> — элементы выравниваются от начала перпендикулярной оси;\n<code>flex-end</code> — элементы выравниваются от конца перпендикулярной оси;\n<code>center</code> — элементы выравниваются по центру;\n<code>baseline</code> — элементы выравниваются по базовой линии;\n<code>stretch</code> — элементы растягиваются, занимая все пространство по перпендикулярной оси (значение по умолчанию).</p>\n<p><code>flex-start</code>, <code>flex-end</code></p>\n<iframe class=\"live-snippet\" style=\"height: 530px\" src=\"../assets/demo/flexbox/demo_14.html?output\"></iframe>\n<p><code>center</code></p>\n<iframe class=\"live-snippet\" style=\"height: 320px\" src=\"../assets/demo/flexbox/demo_15.html?output\"></iframe>\n<p><code>baseline</code>, <code>stretch</code></p>\n<iframe class=\"live-snippet\" style=\"height: 530px\" src=\"../assets/demo/flexbox/demo_16.html?output\"></iframe>\n</section><section id=\"align-self\" data-name=\"align-self\"><h4>Align-self</h4>\n<code>align-self</code> также отвечает за выравнивание по перпендикулярной оси, но задается отдельным flex-элементам.\n<p>Возможные значения <code>align-self</code>:</p>\n<p><code>auto</code> — значение по умолчанию. Означает, что элемент использует <code>align-items</code> родительского элемента;\n<code>flex-start</code> — элемент выравнивается от начала перпендикулярной оси;\n<code>flex-end</code> — элемент выравнивается от конца перпендикулярной оси;\n<code>center</code> — элемент выравнивается по центру;\n<code>baseline</code> — элемент выравнивается по базовой линии;\n<code>stretch</code> — элемент растягивается, занимая все пространство по высоте.</p>\n<p><code>flex-start</code></p>\n<iframe class=\"live-snippet\" style=\"height: 330px\" src=\"../assets/demo/flexbox/demo_17.html?output\"></iframe>\n</section><section id=\"align-content\" data-name=\"align-content\"><h4>Align-content</h4>\nДля управления выравниванием внутри многострочного flex-контейнера есть свойство <code>align-content</code>.\n<p>Возможные значения:</p>\n<p><code>flex-start</code> — элементы выравниваются от начала главной оси;\n<code>flex-end</code> — элементы выравниваются от конца главной оси;\n<code>center</code> — элементы выравниваются по центру главной оси;\n<code>space-between</code> — элементы выравниваются по главной оси, распределяя свободное место между собой;\n<code>space-around</code> — элементы выравниваются по главной оси, распределяя свободное место вокруг себя;\n<code>stretch</code> — элементы растягиваются, заполняя всю высоту (значение по умолчанию).</p>\n<p><code>flex-start</code>, <code>flex-end</code></p>\n<iframe class=\"live-snippet\" style=\"height: 560px\" src=\"../assets/demo/flexbox/demo_18.html?output\"></iframe>\n<p><code>center</code>, <code>stretch</code></p>\n<iframe class=\"live-snippet\" style=\"height: 570px\" src=\"../assets/demo/flexbox/demo_19.html?output\"></iframe>\n<p><code>space-between</code>, <code>space-around</code></p>\n<iframe class=\"live-snippet\" style=\"height: 570px\" src=\"../assets/demo/flexbox/demo_20.html?output\"></iframe>\n</section>\n<p><strong>Ps:</strong> Некоторые штуки мне так и не удалось увидеть в действии, например, строчку <code>flex-flow: column wrap</code> или полную запись того же <code>flex-direction: column; flex-wrap: wrap;</code>.</p>\n<p>Элементы стоят столбиком, но не переносятся:</p>\n<iframe class=\"live-snippet\" style=\"height: 510px\" src=\"../assets/demo/flexbox/demo_21.html?output\"></iframe>\n<p>Не срабатывает <code>wrap</code> при <code>flex-direction: column;</code>, хотя в спеке это выглядит вот так:</p>\n<img src=\"http://www.w3.org/TR/css3-flexbox/images/flex-flow2.svg\" alt=\"column wrap\" />\n<p><s>Думаю, со временем заработает.</s></p>\n<p><b>UPD от 21.06.2014:</b> всё работает, если задать блоку высоту. За подсказку спасибо <a href=\"https://twitter.com/SelenIT2\">SelenIT2</a>.</p>","frontmatter":{"title":"Flexbox","desc":"Справочник по флексбоксу с живыми демо","image":null,"customCSS":null,"customJs":null,"tags":["layout","flexbox"],"layout":null,"links":[{"desc":null,"name":"Flexbox cheatsheet","url":"http://yoksel.github.io/flex-cheatsheet/"},{"desc":null,"name":null,"url":"http://pepelsbey.net/2013/05/flexbox-gotcha/"},{"desc":null,"name":"Свойства Flexbox одной таблицей","url":"/pages/svojstva-flexbox"},{"desc":null,"name":"Разный синтаксис Flexbox","url":"/pages/razny-j-sintaksis-flexbox"}]}}},"pageContext":{"slug":"flexbox","date":"03/09/2013","url":"/flexbox","type":"post","includeContent":"","isArchived":false,"previous":null,"next":{"frontmatter":{"title":"Стрелки с помощью свойства border"},"fields":{"url":"/strelki-s-pomoshh-yu-svojstva-border","type":"post","isArchived":false}}}}}