{"componentChunkName":"component---src-templates-blog-post-js","path":"/svg-sizes","result":{"data":{"markdownRemark":{"html":"<p>Управление размерами — тема важная, и чтобы максимально использовать возможности SVG, нужно хорошо понимать как всё работает.</p>\n<!--more-->\n<p><a href=\"http://www.w3.org/TR/SVG/coords.html\">Спецификация</a>.</p>\n<h2 id=\"viewport\">Вьюпорт</h2>\n<p>Содержимое SVG-элемента отрисовывается на бесконечном холсте и может быть сколь угодно большого размера, но видимая часть холста соответствует размерам SVG-элемента. Эта область отрисовки называется <code class=\"language-text\">viewport</code> (вьюпорт).</p>\n<p>SVG позволяет управлять как размерами вьюпорта, так и поведением содержимого относительно него: оно может обрезаться или показываться полностью, может растягиваться с потерей пропорций или стараться уместиться целиком, даже если при этом появляются пустые поля. Этим поведением можно управлять с помощью атрибутов.</p>\n<p>Если просто вставить SVG на страницу и не задавать ему никакие размеры, он отобразится размером 300px на 150px, что не поместилось — обрежется:</p>\n<iframe height=\"300\"\n      style=\"width: 100%\"\n      title=\"LjxPmm\"\n      src=\"https://codepen.io/yoksel/embed/LjxPmm/?&default-tab=result\"\n    ></iframe>\n<h2 id=\"width-height\">Ширина и высота</h2>\n<p>Шириной и высотой элемента можно управлять стандартными свойствами <code class=\"language-text\">width</code> и <code class=\"language-text\">height</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"markup\"><pre class=\"language-markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>350<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  ...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Их можно задавать как атрибутами, так и в CSS:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.mysvg</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 350px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Для размеров в пикселях, задаваемых в атрибутах, единицы измерения можно не указывать.</p>\n<iframe height=\"450\"\n      style=\"width: 100%\"\n      title=\"SVG with width & height\"\n      src=\"https://codepen.io/yoksel/embed/qXRBBJ/?&default-tab=result\"\n    ></iframe>\n<p>Потаскайте ползунки, и вы увидите, что изменение ширины и высоты влияет только на вьюпорт и не влияет на содержимое, потому что оно отрисовывается на бесконечном холсте, и неизвестно область какого размера нужно ресайзить.</p>\n<h2 id=\"viewBox\">viewBox</h2>\n<p>Похожим образом не изменяя размеры содержимого ресайзится <code class=\"language-text\">iframe</code>, но в случае с SVG это поведение можно изменить, если определить размеры области с помощью свойства <code class=\"language-text\">viewBox</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"markup\"><pre class=\"language-markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>350<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">viewBox</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>0 0 180 180<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  ...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Первые два значения — координаты X и Y верхнего левого угла отображаемой области, последние два — ширина и высота. <code class=\"language-text\">viewBox</code> задаётся только атрибутом.</p>\n<p>Попробуйте теперь изменить размеры, и вы увидите, что содержимое отресайзится, чтобы поместиться целиком.</p>\n<iframe height=\"450\"\n      style=\"width: 100%\"\n      title=\"SVG with width, height & viewBox\"\n      src=\"https://codepen.io/yoksel/embed/yoMdQX/?&default-tab=result\"\n    ></iframe>\n<p><code class=\"language-text\">viewBox</code> можно использовать, например, для кадрирования изображения, чтобы показывать не всю картинку, а только какую-то её часть:</p>\n<iframe height=\"550\"\n      style=\"width: 100%\"\n      title=\"SVG with width, height & viewBox (change viewBox)\"\n      src=\"https://codepen.io/yoksel/embed/yobqYY/?&default-tab=result\"\n    ></iframe>\n<p>Это очень простое демо, <a href=\"https://codepen.io/sdras/full/VjvGJM/\">вот пример посложнее</a> от <a href=\"https://twitter.com/sarah_edo\">Sarah Drasner</a>.</p>\n<p>Интересно, что если у SVG нет размеров, но задан <code class=\"language-text\">viewBox</code>, изображение займёт собой всё доступное пространство:</p>\n<div class=\"gatsby-highlight\" data-language=\"markup\"><pre class=\"language-markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">viewBox</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>0 0 180 180<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  ...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<iframe height=\"350\"\n      style=\"width: 100%\"\n      title=\"SVG with viewBox\"\n      src=\"https://codepen.io/yoksel/embed/KvmPXL/?&default-tab=result\"\n    ></iframe>\n<p>Это поведение может стать проблемой: если размеры у иконок задаются в стилях, а они не загрузились — страница может превратиться в парад гигантских SVG-иконок. Чтобы этого не произошло, всегда явно задавайте в атрибутах SVG ширину и высоту, их потом легко переопределить в CSS.</p>\n<h2 id=\"preserveAspectRatio\">preserveAspectRatio</h2>\n<p>Как мы видели в примере выше, если у SVG заданы размеры и <code class=\"language-text\">viewBox</code>, содержимое  будет сжиматься и растягиваться с сохранением пропорций, чтобы поместиться целиком, но этим поведением тоже можно управлять — с помощью свойства <code class=\"language-text\">preserveAspectRatio</code> (оно задаётся только атрибутом).</p>\n<p>Например, с помощью значения <code class=\"language-text\">none</code> можно указать, что сохранять пропорции не нужно:</p>\n<div class=\"gatsby-highlight\" data-language=\"markup\"><pre class=\"language-markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>350<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">viewBox</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>0 0 180 180<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">preserveAspectRatio</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>none<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token punctuation\">></span></span>\n  ...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<iframe height=\"450\"\n      style=\"width: 100%\"\n      title=\"SVG preserveAspectRatio=\"\n      src=\"https://codepen.io/yoksel/embed/xLdQqX/?&default-tab=result\"\n    ></iframe>\n<p>SVG с <code class=\"language-text\">viewBox</code> и <code class=\"language-text\">preserveAspectRatio=&#39;none&#39;</code> ведёт себя очень похоже на <code class=\"language-text\">img</code>: при изменении размеров содержимое масштабируется под размеры вьюпорта не сохраняя пропорции.</p>\n<p><code class=\"language-text\">none</code> будет полезно для резиновых фонов:</p>\n<iframe height=\"550\"\n      style=\"width: 100%\"\n      title=\"SVG background with & without preserveAspectRatio\"\n      src=\"https://codepen.io/yoksel/embed/YxrpxX/?&default-tab=result\"\n    ></iframe>\n<p>Остальные значения <code class=\"language-text\">preserveAspectRatio</code> состоят из двух частей: первая задаёт выравнивание, вторая — поведение элемента относительно вьюпорта.</p>\n<p>Выравнивание задаётся одним значением, определяющим положение по вертикали и по горизонтали, например: <code class=\"language-text\">xMaxYMin</code>. Для обеих осей можно задать положение в начале, в середине и в конце:</p>\n<p><code class=\"language-text\">xMin</code>, <code class=\"language-text\">YMin</code> — в начале оси\n<code class=\"language-text\">xMid</code>, <code class=\"language-text\">YMid</code> — в середине\n<code class=\"language-text\">xMax</code>, <code class=\"language-text\">YMax</code> — в конце</p>\n<p>Эти значения можно комбинировать в любых сочетаниях, но порядок должен сохраняться: первым всегда идет значение для X, вторым для Y. Значение для Y всегда пишется с большой буквы.</p>\n<p>Поведение элемента определяется второй частью <code class=\"language-text\">preserveAspectRatio</code>. Возможные значения:</p>\n<p><code class=\"language-text\">meet</code> — содержимое стремится уместиться целиком (как фон с <code class=\"language-text\">background-size: contain</code>)\n<code class=\"language-text\">slice</code> — содержимое заполняет собой всю область видимости (как <code class=\"language-text\">background-size: cover</code>: что не поместилось, обрежется)</p>\n<iframe height=\"550\"\n      style=\"width: 100%\"\n      title=\"SVG preserveAspectRatio values\"\n      src=\"https://codepen.io/yoksel/embed/RZVqJv/?&default-tab=result\"\n    ></iframe>\n<p>Важно помнить, что <code class=\"language-text\">preserveAspectRatio</code> не работает без <code class=\"language-text\">viewBox</code>. <code class=\"language-text\">viewBox</code> задает область, которая должна масштабироваться, <code class=\"language-text\">preserveAspectRatio</code> определяет как именно она должна это делать.</p>\n<p>Также нужно понимать, что <code class=\"language-text\">preserveAspectRatio</code> срабатывает, если вьюпорт и вьюбокс имеют разные соотношения сторон. Если соотношения сторон совпадают, и содержимое умещается без полей, <code class=\"language-text\">preserveAspectRatio</code> работать не будет (в этом случае в нём просто нет необходимости).</p>\n<p>Для использования SVG в качестве иконок достаточно <code class=\"language-text\">viewBox</code> и размеров, но если предполагается делать что-то более сложное, имеет смысл разобраться с единицами измерения и системой координат.</p>\n<h2 id=\"units\">Единицы измерения</h2>\n<p>Внутри SVG можно использовать <code class=\"language-text\">em</code>, <code class=\"language-text\">ex</code>, <code class=\"language-text\">px</code>, <code class=\"language-text\">pt</code>, <code class=\"language-text\">pc</code>, <code class=\"language-text\">cm</code>, <code class=\"language-text\">mm</code>, <code class=\"language-text\">in</code>, проценты, а также единицы системы координат (user space units). Единицы системы координат соответствуют пикселям, поэтому для значений в пикселях единицы измерения указывать не нужно.</p>\n<h2 id=\"coordinates\">Системы координат</h2>\n<p>В SVG-документе есть две системы координат:</p>\n<ol>\n<li>Система координат области отрисовки — <b>viewport space</b>.</li>\n<li>Система координат содержимого — <b>user space</b>.</li>\n</ol>\n<p>Отсчет системы координат вьюпорта начинается от левого верхнего угла вьюпорта, системы координат содержимого — от левого верхнего края вьюбокса.</p>\n<p>По умолчанию система координат содержимого соответствует системе координат вьюпорта, а единицы измерения содержимого — единицам измерения вьюпорта, но при использовании трансформаций или <code>viewBox</code> масштабируется вся система координат с единицами измерения, то есть пиксели из <i>user space</i> больше не равны пикселям из <i>viewport space</i>.</p>\n<p>Поизменяйте размеры элемента и посмотрите что происходит с системой координат содержимого (она показана бирюзовым):</p>\n<iframe height=\"550\"\n      style=\"width: 100%\"\n      title=\"SVG with & coordinats\"\n      src=\"https://codepen.io/yoksel/embed/VzWXZz/?&default-tab=result\"\n    ></iframe>\n<p>Система координат содержимого начинается из точки 0,0, и если вьюпорт и вьюбокс не совпадают, точка отсчета, как и вся система координат содержимого, будет ездить и масштабироватся вместе с вьюбоксом.</p>\n<p>Масштабирование единиц измерения хорошо видно на примере обводки: изначально её толщина равна единице, но при изменении размеров видимая толщина обводки будет изменяться вместе с фигурой:</p>\n<iframe height=\"550\"\n      style=\"width: 100%\"\n      title=\"SVG with width, height & viewBox + stroke\"\n      src=\"https://codepen.io/yoksel/embed/xLrreW/?&default-tab=result\"\n    ></iframe>\n<p>Если такое поведение нежелательно, это можно исправить с помощью свойства <code class=\"language-text\">vector-effect</code> со значением <code class=\"language-text\">non-scaling-stroke</code>, оно добавляется к содержимому SVG:</p>\n<div class=\"gatsby-highlight\" data-language=\"markup\"><pre class=\"language-markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>circle</span> <span class=\"token attr-name\">r</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>60<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cx</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>75<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cy</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>75<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">stroke</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>black<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">stroke-width</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">vector-effect</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>non-scaling-stroke<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></code></pre></div>\n<iframe height=\"550\"\n      style=\"width: 100%\"\n      title=\"SVG with width, height & viewBox + stroke\"\n      src=\"https://codepen.io/yoksel/embed/Xaeqqe/?&default-tab=result\"\n    ></iframe>\n<p><code class=\"language-text\">vector-effect</code> можно задавать как атрибутом, так и в CSS.</p>\n<p>Также новая система координат создается при добавлении трансформаций:</p>\n<iframe height=\"550\"\n      style=\"width: 100%\"\n      title=\"SVG with transform & coordinats\"\n      src=\"https://codepen.io/yoksel/embed/OjxZrJ/?&default-tab=result\"\n    ></iframe>\n<p>Внутри трансформируемого элемента будет своя своя система координат, отличная от систем координат вьюпорта и вьюбокса.</p>\n<p>Тема может выглядеть сложной, но на самом деле, достаточно немного поиграться с кодом, и всё станет понятно. Для лучшего понимания систем координат, размеров и трансформаций в SVG рекомендую <a href=\"https://www.sarasoueidan.com/demos/interactive-svg-coordinate-system/index.html\">демо Сары Суайдан</a>, а также её статьи:</p>\n<ul>\n  <li>\n    <a href=\"http://www.sarasoueidan.com/blog/svg-coordinate-systems/\">Understanding SVG Coordinate Systems and Transformations (Part 1) — The viewport, viewBox, and preserveAspectRatio</a>\n  </li>\n  <li>\n    <a href=\"http://www.sarasoueidan.com/blog/svg-transformations/\">Understanding SVG Coordinate Systems and Transformations (Part 2) — The transform Attribute</a>\n  </li>\n  <li>\n    <a href=\"http://www.sarasoueidan.com/blog/nesting-svgs/\">Understanding SVG Coordinate Systems and Transformations (Part 3) — Establishing New Viewports</a>\n  </li>\n</ul>","frontmatter":{"title":"Размеры в SVG","desc":"Управление размерами — тема важная, и чтобы максимально использовать возможности SVG, нужно хорошо понимать как всё работает.","image":"https://img-fotki.yandex.ru/get/227342/5091629.a5/0_93a14_d716e495_orig","customCSS":null,"customJs":null,"tags":["svg"],"layout":null,"links":[{"desc":null,"name":"Coordinate Systems, Transformations and Units","url":"http://www.w3.org/TR/SVG/coords.html"}]}}},"pageContext":{"slug":"svg-sizes","date":"15/08/2017","url":"/svg-sizes","type":"post","includeContent":"","isArchived":false,"previous":{"frontmatter":{"title":"Адаптивный Pixel Perfect"},"fields":{"url":"/adaptive-pixel-perfect","type":"post","isArchived":false}},"next":{"frontmatter":{"title":"Вариативные шрифты"},"fields":{"url":"/opentype-variable-fonts","type":"post","isArchived":false}}}}}